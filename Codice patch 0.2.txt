package com.company;

import java.util.Scanner;


public class Main {


    public static void main(String[] args) {
        Scanner in = new Scanner (System.in);
        int input_id,risultato1,risultato2;
        String nom;
        String cognom;
        InputEcontrollo fase1=new InputEcontrollo();
        fase1.setN_part(3);
        for(int i=0; i<fase1.n_part; i++) {fase1.a[i]  = new partecipante();}
        for(int i=0;i<fase1.n_part;i++){
            System.out.println("Inserisci nome, cognome e numero identificativo del " + (i+1) +" partecipante");
            nom=in.next();
            System.out.println("Inserisci cognome");
            cognom=in.next();
            System.out.println("Inserisci numero identificativo del " + (i+1) +"partecipante");
            input_id=in.nextInt();
            if(fase1.controlloID(input_id)==true){
                fase1.inizializza(nom,cognom,input_id,i);
            }
            else{
                System.out.println("Input sbagliato");
                i--;
            }
        }
        Accoppiamento torneo2=new Accoppiamento();
        int h=0;
        while(fase1.n_part!=1){
            torneo2.random();
            for(int i=0;i<fase1.n_part/2;i++){
                System.out.println(torneo2.sfide1(h));
                System.out.println("Inserisci il punteggio del 1 partecipante");
                risultato1=in.nextInt();
                System.out.println("Inserisci il punteggio del 2 partecipante");
                risultato2=in.nextInt();
                torneo2.sfide2(risultato1, risultato2, h);
                h=h+2;
            }
            fase1.n_part=fase1.n_part/2;
            h=0;
        }

        System.out.println(torneo2);



    }
}



package com.company;
import java.util.Scanner;

public class InputEcontrollo {
    Scanner in = new Scanner (System.in);
    static public partecipante a[]=new partecipante[64];

    static public int part_max=0;
    protected int dim_num=0;
    static public int n_part=0;
    static public int n_teste=0;

    public int getN_part(){
        return n_part;
    }

    public int getN_teste(){
        return n_teste;
    }

    public void setN_part(int n_part){
        this.n_part=n_part;
        this.part_max=n_part;
    }

    public void setN_teste(int n_teste){
        this.n_teste=n_teste;
    }

    public String getA(int i){
        return a[i].nome;
    }

    public int getID(int i){
        return a[i].id;
    }


    public void inizializza(String nom , String cognom , int id_part , int i){
        a[i].nome=nom;
        a[i].cognome=cognom;
        a[i].id=id_part;
        if(a[i].id<17){
            n_teste++;
        }
        dim_num++;
    }



    public boolean controlloID(int id_part){
        boolean control=true;
        if(dim_num!=0){
            for(int j=0; j<dim_num;j++){
                if(id_part==a[j].id){
                    control=false;
                }
            }
        }

        return control;
    }

}
  /* da fare meglio
  while(control==false){
  b=in.nextInt();
  //if(dim_num-1!=0){
  for(int j=0; j<dim_num-1;j++){
  if(b==numerazione[j]){
  control2=false;
  }
  }



  if(control2==true){
  control=true;
   b=a[i].id;
   b=numerazione[dim_num];
   dim_num++;
  }

  }
  control=false;
  */
//}






package com.company;


import static com.company.InputEcontrollo.n_part;
import static com.company.InputEcontrollo.a;
import static com.company.InputEcontrollo.part_max;
import static com.company.InputEcontrollo.n_teste;
class Accoppiamento {
    protected int coppie[]=new int[64];
    protected int sfidanti[]=new int[64];
    protected int fase_succ[]=new int[64];
    int nonteste=n_teste;
    int d=0;

    int [][] risultati=new int[2][63];
    String finale="" ;

    public void evoluzioneStringa (int b){
        for(int i=0;i<part_max;i++){
            if(coppie[b]==a[i].id){
                finale = finale + "\n" + a[i].getNome()+ " " + a[i].getCognome() + " " + risultati[0][b];
            }
        }
        finale = finale +  "\n" + "vs" + "\n";
        for(int j=0;j<part_max;j++){
            if(coppie[b+1]==a[j].id){
                finale = finale + a[j].getNome() + " " + a[j].getCognome() + " " + risultati[1][b];
            }
        }

        finale=finale + "\n" + "******";

    }


    public String sfide1(int b){
        String partita="";
        for(int i=0;i<part_max;i++){
            if(coppie[b]==a[i].id){
                partita = a[i].getNome() + " " + a[i].getCognome() + " " + "vs";
            }
        }

        for(int j=0;j<part_max;j++){
            if(coppie[b+1]==a[j].id){
                partita = partita + " " + a[j].getNome() + " "+ a[j].getCognome()+ " ";
            }
        }

        return partita;

    }

    public void sfide2(int ris1,int ris2, int b){
        risultati[0][b]=ris1;
        risultati[1][b]=ris2;
        evoluzioneStringa(b);
        if(ris1>=ris2){
            for(int i=0;i<part_max;i++){
                if(coppie[b++]==a[i].id){
                    a[i].id=0;
                }
            }
        }
        else{
            for(int i=0;i<part_max;i++){
                if(coppie[b]==a[i].id){
                    a[i].id=0;
                }
            }
        }

    }









    @Override
    public String toString() {
        return finale;
    }

    public void random(){
        // int giri=0;
        int pos=0;
        int nonteste=n_teste;
        int nonpart=n_part-n_teste;
        int swap1=0;
        int swap2=0;

        boolean control1=false;
        boolean control2=false;
        int conta=0;
        int part_rim=n_part;

        int casuale=0;
        int casuale2=0;
        int casuale3=0;
        int casuale_disp =0;
        int[] array_cont=new int[64];

        for(int t=0;t<part_max;t++){
            if(a[t].id!=0){
                array_cont[conta]=a[t].id;
                conta++;
            }
        }
        boolean control3=false;

 if((n_part % 2) !=0){
     while(control3==false){
     casuale3 = (int)(Math.random()*16)+1;
     for(int j=0;j<n_teste;j++){
     if(casuale==a[j].id){
     array_cont[j]=0;
     control3=true;
     }
     }
     }
     }








        for(int i=0;i<n_part/2;i++){

            //while(control1==false){
            casuale = (int)(Math.random()*part_rim);
            //for(int l=0;l<n_part;l++){
            //System.out.println("giro1"+giri);
            //giri++;
            if(array_cont[casuale]!=0){
                swap1 = array_cont[casuale];
                array_cont[casuale]= array_cont[part_rim-1];
                array_cont[part_rim-1]=swap1;
                casuale=swap1;
                part_rim--;
            }
            //}

            //}
            while(control2==false){
                casuale2 = (int)(Math.random()*part_rim);
                //System.out.println("giro2"+giri);
                if(array_cont[casuale2]!=0){
                    if(nonteste==nonpart){
                        if( casuale>=17 && array_cont[casuale2]<17){
                            swap2 = array_cont[casuale2];
                            array_cont[casuale2]= array_cont[part_rim-1];
                            array_cont[part_rim-1]=swap2;
                            casuale2=swap2;
                            part_rim--;
                            control2=true;
                        }
                        else if( casuale<17 && array_cont[casuale2]>=17){
                            swap2 = array_cont[casuale2];
                            array_cont[casuale2]= array_cont[part_rim-1];
                            array_cont[part_rim-1]=swap1;
                            casuale2=swap2;
                            part_rim--;
                            control2=true;
                        }
                        else {
                        }
                    }
                    else{
                        swap2 = array_cont[casuale2];
                        array_cont[casuale2]= array_cont[part_rim-1];
                        array_cont[part_rim-1]=swap1;
                        casuale2=swap2;
                        part_rim--;
                        control2=true;
                    }
                }
            }

            // controllo normale
            control2=false;

            coppie[pos]=casuale;
            coppie[pos+1]=casuale2;
            System.out.println(pos + "pos" + casuale);
            System.out.println(pos+1 + "pos" + casuale2);

            pos=pos+2;
            if(casuale<=17){
                nonteste--;
            }
            else{
                nonpart--;
            }
            if(casuale2<=17){
                nonteste--;
            }
            else{
                nonpart--;
            }
        }

    }


    // codice copiato in random se sono dispari
    public void part_dispari(){
        boolean control3=false;
        if((n_part % 2) !=0){
            while(control3==false){
                int casuale = (int)(Math.random()*16);
                for(int j=0;j<n_teste;j++){
                    if(casuale==a[j].id){
                        //fase_succ[0]=casuale;
                        control3=true;
                    }
                }
            }
        }

    }

}





package com.company;

public class partecipante {

    static protected String nome;
    static protected  String cognome;
    static protected  int id;

    public void setNome(String nome){
        this.nome=nome;
    }

    public String getNome(){
        return nome;
    }

    public void setCognome(String cognome){
        this.cognome=cognome;
    }

    public String getCognome(){
        return cognome;
    }

    public void setId(int id){
        this.id=id;
    }

    public int getId(){
        return id;
    }






import static com.company.partecipante.cognome;
import static com.company.partecipante.id;


public class Salvataggio<a> {
    public static void main(String[] args) {
        partecipante[] a = new partecipante[64];
        ArrayList<partecipante> list = new ArrayList<>(64);

        list.add(new partecipante());


        Iterator<partecipante> i = list.iterator();
        while(i.hasNext()){

            partecipante p = i.next();

System.out.println(p);

        }




    }
}



















