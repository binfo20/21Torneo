<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>1040</x><y>40</y><w>210</w><h>190</h></coordinates><panel_attributes>Partecipante


--
#string nome;
#string cognome;
#int id; 
--

--
partecipante generico




</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1010</x><y>530</y><w>250</w><h>170</h></coordinates><panel_attributes>inputEcontrollo
--
+ Partecipante a[64];
# int n_part;
# int n_teste;
--
+ void setn_part(int partecipanti);
+ void setn_teste(int teste_di_serie);
+ void inizializza(String nome,String cognome,Int id,int i);
--
Input e controllo partecipanti

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>50</x><y>500</y><w>210</w><h>190</h></coordinates><panel_attributes>Accoppiamento

--
+ int coppie[];

--
+ void random();
+ void part-dispari();
--
posizione i partecipanti nelle coppie 
che si devono sfidare</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>520</y><w>210</w><h>190</h></coordinates><panel_attributes>sfide

--
+ int risultati [2][];
+ int part_pass[]
--
# void partite();
--
fa inserire i risultati delle sfide 
e mostra a chi lo richiede  
i partecipanti
passati 
e i risultati 


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>390</x><y>310</y><w>210</w><h>190</h></coordinates><panel_attributes>Tabellone


--
# partecipante podio[4];
--
+ evoluzioneStringa();
+String Tostring();
--
scrive  i risultati


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>680</x><y>40</y><w>210</w><h>190</h></coordinates><panel_attributes>Main

--

--

--
deve far fare l'input dei partecipanti
e far vedere i risultati all'utente






</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>318</x><y>50</y><w>210</w><h>190</h></coordinates><panel_attributes>Salvataggio

--

--
#memorizzazioneCoppie();
#ScrutturaSuFile();
#LetturaDaFile();
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1098</x><y>220</y><w>70</w><h>330</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;310;50;10</additional_attributes></element><element><id>Relation</id><coordinates><x>518</x><y>50</y><w>180</w><h>50</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;Uses&gt;&gt;</panel_attributes><additional_attributes>10;30;160;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>668</x><y>520</y><w>210</w><h>190</h></coordinates><panel_attributes>&lt;&lt;Accoppiamneto-sfide&gt;&gt;

--
+ int coppie[];
+ int risultati [2][];
+ int part_pass[];
# partecipante podio[4];
--
+ void random();
+ void part-dispari();
+ void partite();
+String Tostring();
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>588</x><y>220</y><w>160</w><h>120</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;Uses&gt;&gt;</panel_attributes><additional_attributes>10;100;140;10</additional_attributes></element><element><id>Relation</id><coordinates><x>848</x><y>220</y><w>210</w><h>330</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;Uses&gt;&gt;</panel_attributes><additional_attributes>190;310;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>748</x><y>220</y><w>90</w><h>320</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;Uses&gt;&gt;</panel_attributes><additional_attributes>10;300;50;10</additional_attributes></element></diagram>