/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Torneo;
import java.util.Scanner;
/**
 *
 * @author gramm
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
       Scanner in = new Scanner (System.in);
       int input_id;
       String nom;
       String cognom;
       InputEcontrollo fase1=new InputEcontrollo(); 
       fase1.setN_part(2);
       for(int i=0; i<fase1.n_part; i++) {fase1.a[i]  = new partecipante();}
       for(int i=0;i<fase1.n_part;i++){
           System.out.println("Inserisci nome, cognome e numero identificativo del " + i +" partecipante");
           nom=in.next();
           System.out.println("Inserisci cognome");
           cognom=in.next();
           System.out.println("Inserisci numero identificativo del " + i +"partecipante");
           input_id=in.nextInt();
           if(fase1.controlloID(input_id)==true){
               fase1.inizializza(nom,cognom,input_id,i);
           }
           else{
               System.out.println("Input sbagliato");
               i--;
           }
       }
       Accoppiamento torneo2=new Accoppiamento();
       torneo2.random();
              
               
               
       
       
       
    }
}





/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Torneo;

/**
 *
 * @author gramm
 */
public class partecipante {
protected String nome;
protected  String cognome;
protected  int id;

public void setNome(String nome){
this.nome=nome;
}
 
public String getNome(){
return nome;
}

public void setCognome(String cognome){
this.cognome=cognome;
}

public String getCognome(){
return cognome;
}

public void setId(int id){
this.id=id;
}

public int getId(){
return id;
}

}



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Torneo;
import java.util.Scanner;
/**
 *
 * @author gramm
 */
public class InputEcontrollo {
    Scanner in = new Scanner (System.in);
static public partecipante a[]=new partecipante[64];
 

protected int dim_num=0;
static public int n_part=0;
static public int n_teste=0;

public int getN_part(){
return n_part;
}

public int getN_teste(){
return n_teste;
}

public void setN_part(int n_part){
this.n_part=n_part;   
}

public void setN_teste(int n_teste){
this.n_teste=n_teste;   
}

public String getA(int i){
 return a[i].nome;  
}

public int getID(int i){
return a[i].id;    
}


public void inizializza(String nom , String cognom , int id_part , int i){
  a[i].nome=nom;
  a[i].cognome=cognom;
  a[i].id=id_part;
  if(a[i].id<17){
  n_teste++;
  }
  dim_num++;
  }



public boolean controlloID(int id_part){
    boolean control=true;
  if(dim_num!=0){
  for(int j=0; j<dim_num;j++){
  if(id_part==a[j].id){
  control=false;    
  }
  }   
  }  
    
  return control;  
}

  }
  /* da fare meglio
  while(control==false){
  b=in.nextInt();
  //if(dim_num-1!=0){
  for(int j=0; j<dim_num-1;j++){
  if(b==numerazione[j]){
  control2=false;    
  }
  }
  
 
   
  if(control2==true){
  control=true; 
   b=a[i].id;
   b=numerazione[dim_num];
   dim_num++;
  }
  
  }
  control=false;
  */
  //}

  
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Torneo;

import static Torneo.InputEcontrollo.n_teste;
import static Torneo.InputEcontrollo.n_part;
import static Torneo.InputEcontrollo.a;

/**
 *
 * @author gramm
 */
public class Accoppiamento {
 protected int coppie[]=new int[64];  
 protected int sfidanti[]=new int[64];  
//protected int fase_succ[]=new int[64];
 int part_rim=0;
 int nonteste=n_teste;
 public void random(){
     // int giri=0;
     int pos=0;
     int nonteste=n_teste;
     int nonpart=n_part-n_teste;
     
     boolean control1=false;
     boolean control2=false;
     
     int casuale=0;
     int casuale2=0;
     int casuale_disp =0;
     int[] array_cont=new int[64];
     
     for(int t=0;t<n_part;t++){
     array_cont[t]=a[t].id;  
     }
     //se sono dispari
     boolean control3=false;
 if((n_part % 2) !=0){
     while(control3==false){
     int casuale3 = (int)(Math.random()*16);
     for(int j=0;j<n_teste;j++){
     if(casuale==a[j].id){
     //fase_succ[0]=casuale;
     control3=true;
     part_rim++;
     }
     } 
     }
     }
    // 
     
     
     
     
     
     
     
     for(int i=0;i<n_part/2;i++){
         
     while(control1==false){
      casuale = (int)(Math.random()*4)+1;
     for(int l=0;l<n_part;l++){
     //System.out.println("giro1"+giri);
     //giri++;
     if(casuale==array_cont[l]){
     control1=true;
     array_cont[l]=0;
     }
     } 
     }
     control1=false;
     while(control2==false){
     casuale2 = (int)(Math.random()*4)+1; 
     //System.out.println("giro2"+giri);
    // giri++;
    //controllo tipi di accopiamenti predefiniti
     if(nonteste>=nonpart && casuale>17){
         if(casuale2<17){
           for(int l=0;l<n_part;l++){
     if(casuale==array_cont[l]){
     control2=true;
     array_cont[l]=0;
     }
     } 
         }
     }
     else if(nonteste<=nonpart && casuale<17){
         if(casuale2>=17){
          for(int l=0;l<n_part;l++){
     if(casuale==array_cont[l]){
     control2=true;
     array_cont[l]=0;
     }
     }    
         }
     }
     //controllo tipi di accopiamenti predefiniti
     else{
      for(int l=0;l<n_part;l++){
     if(casuale2==array_cont[l]){
     control2=true;
     array_cont[l]=0;
     }
     }    
     }
     }
     // controllo normale
     control2=false;
      
     coppie[pos]=casuale;
     coppie[pos+1]=casuale2;
     System.out.println(pos + "pos" + casuale);
     System.out.println(pos+1 + "pos" + casuale2);
   
     pos=pos+2;
      
     }
         
}
 
 
 // codice copiato in random se sono dispari
 public void part_dispari(){
     boolean control3=false;
 if((n_part % 2) !=0){
     while(control3==false){
     int casuale = (int)(Math.random()*16);
     for(int j=0;j<n_teste;j++){
     if(casuale==a[j].id){
     //fase_succ[0]=casuale;
     control3=true;
     part_rim++;
     }
     } 
     }
     }
 
}
 
}
    

