<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>798</x><y>70</y><w>210</w><h>190</h></coordinates><panel_attributes>Partecipante


--
#string nome;
#string cognome;
#int id; 
--
Set e get del caso
--
partecipante generico




</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>698</x><y>420</y><w>260</w><h>260</h></coordinates><panel_attributes>inputEcontrollo
--
+ Partecipante a[64];
+ int n_part;
+ int n_teste;
+ part_max;
# din_num;
--
+ void setN-part(int partecipanti);
+ getID(); int
+ void setn_teste(int teste_di_serie);
// abbiamo evitato altri get e set meno importanti
+ void inizializza(String nome,String cognome ,Int id ,int );
+ controllo(); boolean
--
Input e controllo partecipanti

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>498</x><y>60</y><w>210</w><h>190</h></coordinates><panel_attributes>Main

--

--

--
deve far fare l'input dei partecipanti
e far vedere i risultati all'utente






</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>186</x><y>80</y><w>210</w><h>190</h></coordinates><panel_attributes>Salvataggio

--

--
#memorizzazioneCoppie();
#ScrutturaSuFile();
#LetturaDaFile();
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>786</x><y>250</y><w>140</w><h>190</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;170;120;10</additional_attributes></element><element><id>Relation</id><coordinates><x>386</x><y>80</y><w>130</w><h>50</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;Uses&gt;&gt;</panel_attributes><additional_attributes>10;30;110;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>296</x><y>380</y><w>270</w><h>310</h></coordinates><panel_attributes>&lt;&lt;Torneo&gt;&gt;

--
# int coppie[64];
# int risultati [2][];
# partecipante podio[4];
# String finale;

--
+ void evoluzionestringa(int);
+ void sfide1(int);
+ void sfide2(int risultatoq, int risultato2 , int);
+ void random();
+ void part-dispari();
+ String toString();

--
FÃ  l'accoppiamento casuale 
raccoglie i risultati delle sfide e prepara 
l'output finale


</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>666</x><y>240</y><w>90</w><h>200</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;Uses&gt;&gt;</panel_attributes><additional_attributes>60;180;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>376</x><y>240</y><w>260</w><h>160</h></coordinates><panel_attributes>lt=&lt;.
&lt;&lt;Uses&gt;&gt;</panel_attributes><additional_attributes>10;140;240;10</additional_attributes></element></diagram>